<!doctype html>
<html
	lang="en"
	style="
		margin: 0;
		padding: 0;
		min-height: 100%;
		display: flex;
		flex-direction: column;
	"
>
	<head>
		<meta charset="utf-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, shrink-to-fit=no"
		/>

		<style>
			:root {
				--bg: #f9fafb;
				--col:   #1f2937;
				--bg-dark: #0b0f19;
				--col-dark: #f3f4f6;
			}


			body {
				background: var(--bg);
				color: var(--col);
				font-family: Arial, Helvetica, sans-serif;
			}

			@media (prefers-color-scheme: dark) {
				body {
					background: var(--bg-dark);
					color: var(--col-dark);
				}
			}
		</style>

		<meta property="og:url" content="https://gradio.app/" />
		<meta property="og:type" content="website" />
		<meta property="og:image" content="" />
		<meta property="og:title" content="Gradio" />
		<meta
			property="og:description"
			content=""
		/>
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:creator" content="@teamGradio" />
		<meta name="twitter:title" content="Gradio" />
		<meta
			name="twitter:description"
			content=""
		/>
		<meta name="twitter:image" content="" />

		<script data-gradio-mode>
			window.__gradio_mode__ = "app";
			window.iFrameResizer = {
				heightCalculationMethod: "taggedElement"
			};
			window.parent?.postMessage(
				{ type: "SET_SCROLLING", enabled: false },
				"*"
			);
		</script>

		<script>window.gradio_config = {"version":"5.8.0","api_prefix":"/gradio_api","mode":"blocks","app_id":13982021542896071154,"dev_mode":true,"analytics_enabled":true,"components":[{"id":1,"type":"markdown","props":{"value":"# üè® Tr·ª£ L√Ω Kh√°ch S·∫°n","show_label":false,"rtl":false,"latex_delimiters":[{"left":"$$","right":"$$","display":true}],"visible":true,"elem_classes":[],"key":"__1__","sanitize_html":true,"line_breaks":false,"header_links":false,"show_copy_button":false,"container":false,"name":"markdown","_selectable":false},"skip_api":false,"component_class_id":"34d7a370a25315c7a54e63302089fd76","key":"__1__","api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"# Hello!"},{"id":2,"type":"markdown","props":{"value":"*H·ªó tr·ª£ ƒë·∫∑t ph√≤ng v√† d·ªãch v·ª• 24/7*","show_label":false,"rtl":false,"latex_delimiters":[{"left":"$$","right":"$$","display":true}],"visible":true,"elem_classes":[],"key":"__2__","sanitize_html":true,"line_breaks":false,"header_links":false,"show_copy_button":false,"container":false,"name":"markdown","_selectable":false},"skip_api":false,"component_class_id":"34d7a370a25315c7a54e63302089fd76","key":"__2__","api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"# Hello!"},{"id":3,"type":"chatbot","props":{"_undoable":false,"_retryable":false,"likeable":false,"value":[],"type":"messages","label":"Tr√≤ Chuy·ªán V·ªõi Tr·ª£ L√Ω","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"autoscroll":true,"key":"__3__","height":500,"latex_delimiters":[{"left":"$$","right":"$$","display":true}],"rtl":false,"show_share_button":false,"show_copy_button":false,"avatar_images":[null,null],"sanitize_html":true,"render_markdown":true,"bubble_full_width":false,"line_breaks":true,"layout":"bubble","show_copy_all_button":false,"allow_file_downloads":true,"name":"chatbot","_selectable":false},"skip_api":false,"component_class_id":"7ff316b5db197c379a221ff833a49e24","key":"__3__","api_info":{"$defs":{"ComponentMessage":{"properties":{"component":{"title":"Component","type":"string"},"value":{"title":"Value"},"constructor_args":{"title":"Constructor Args","type":"object"},"props":{"title":"Props","type":"object"}},"required":["component","value","constructor_args","props"],"title":"ComponentMessage","type":"object"},"FileData":{"description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed).","properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"default":{"_type":"gradio.FileData"},"title":"Meta","type":"object"}},"required":["path"],"title":"FileData","type":"object"},"FileMessage":{"properties":{"file":{"$ref":"#/$defs/FileData"},"alt_text":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Alt Text"}},"required":["file"],"title":"FileMessage","type":"object"},"Message":{"properties":{"role":{"title":"Role","type":"string"},"metadata":{"$ref":"#/$defs/Metadata"},"content":{"anyOf":[{"type":"string"},{"$ref":"#/$defs/FileMessage"},{"$ref":"#/$defs/ComponentMessage"}],"title":"Content"},"options":{"anyOf":[{"items":{"$ref":"#/$defs/Option"},"type":"array"},{"type":"null"}],"default":null,"title":"Options"}},"required":["role","content"],"title":"Message","type":"object"},"Metadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Title"}},"title":"Metadata","type":"object"},"Option":{"properties":{"label":{"title":"Label","type":"string"},"value":{"title":"Value","type":"string"}},"required":["value"],"title":"Option","type":"object"}},"items":{"$ref":"#/$defs/Message"},"title":"ChatbotDataMessages","type":"array","additional_description":null},"api_info_as_input":{"$defs":{"ComponentMessage":{"properties":{"component":{"title":"Component","type":"string"},"value":{"title":"Value"},"constructor_args":{"title":"Constructor Args","type":"object"},"props":{"title":"Props","type":"object"}},"required":["component","value","constructor_args","props"],"title":"ComponentMessage","type":"object"},"FileData":{"description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed).","properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"default":{"_type":"gradio.FileData"},"title":"Meta","type":"object"}},"required":["path"],"title":"FileData","type":"object"},"FileMessage":{"properties":{"file":{"$ref":"#/$defs/FileData"},"alt_text":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Alt Text"}},"required":["file"],"title":"FileMessage","type":"object"},"Message":{"properties":{"role":{"title":"Role","type":"string"},"metadata":{"$ref":"#/$defs/Metadata"},"content":{"anyOf":[{"type":"string"},{"$ref":"#/$defs/FileMessage"},{"$ref":"#/$defs/ComponentMessage"}],"title":"Content"},"options":{"anyOf":[{"items":{"$ref":"#/$defs/Option"},"type":"array"},{"type":"null"}],"default":null,"title":"Options"}},"required":["role","content"],"title":"Message","type":"object"},"Metadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Title"}},"title":"Metadata","type":"object"},"Option":{"properties":{"label":{"title":"Label","type":"string"},"value":{"title":"Value","type":"string"}},"required":["value"],"title":"Option","type":"object"}},"items":{"$ref":"#/$defs/Message"},"title":"ChatbotDataMessages","type":"array","additional_description":null},"api_info_as_output":{"$defs":{"ComponentMessage":{"properties":{"component":{"title":"Component","type":"string"},"value":{"title":"Value"},"constructor_args":{"title":"Constructor Args","type":"object"},"props":{"title":"Props","type":"object"}},"required":["component","value","constructor_args","props"],"title":"ComponentMessage","type":"object"},"FileData":{"description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed).","properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"default":{"_type":"gradio.FileData"},"title":"Meta","type":"object"}},"required":["path"],"title":"FileData","type":"object"},"FileMessage":{"properties":{"file":{"$ref":"#/$defs/FileData"},"alt_text":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Alt Text"}},"required":["file"],"title":"FileMessage","type":"object"},"Message":{"properties":{"role":{"title":"Role","type":"string"},"metadata":{"$ref":"#/$defs/Metadata"},"content":{"anyOf":[{"type":"string"},{"$ref":"#/$defs/FileMessage"},{"$ref":"#/$defs/ComponentMessage"}],"title":"Content"},"options":{"anyOf":[{"items":{"$ref":"#/$defs/Option"},"type":"array"},{"type":"null"}],"default":null,"title":"Options"}},"required":["role","content"],"title":"Message","type":"object"},"Metadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Title"}},"title":"Metadata","type":"object"},"Option":{"properties":{"label":{"title":"Label","type":"string"},"value":{"title":"Value","type":"string"}},"required":["value"],"title":"Option","type":"object"}},"items":{"$ref":"#/$defs/Message"},"title":"ChatbotDataMessages","type":"array","additional_description":null},"example_inputs":[{"role":"user","metadata":{"title":null},"content":"Hello!","options":null},{"role":"assistant","metadata":{"title":null},"content":"How can I help you?","options":null}]},{"id":4,"type":"row","props":{"variant":"default","visible":true,"equal_height":false,"show_progress":false,"name":"row"},"skip_api":true,"component_class_id":"d0ab510271f8462c261629c9cf73f84a","key":"__4__"},{"id":5,"type":"textbox","props":{"lines":1,"max_lines":20,"placeholder":"Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n v·ªÅ kh√°ch s·∫°n...","show_label":false,"container":false,"scale":8,"min_width":160,"visible":true,"autofocus":false,"autoscroll":true,"elem_classes":[],"key":"__5__","type":"text","rtl":false,"show_copy_button":false,"submit_btn":false,"stop_btn":false,"name":"textbox","_selectable":false},"skip_api":false,"component_class_id":"45f0ece83825356234e5ee12296ac780","key":"__5__","api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"Hello!!"},{"id":6,"type":"button","props":{"value":"üì® G·ª≠i","variant":"primary","visible":true,"interactive":true,"elem_classes":[],"key":"__6__","name":"button","_selectable":false},"skip_api":true,"component_class_id":"d89082a67aeba27fccce83ed03e8c257","key":"__6__"},{"id":7,"type":"button","props":{"value":"B·∫Øt ƒê·∫ßu L·∫°i","variant":"secondary","visible":true,"interactive":true,"elem_classes":[],"key":"__7__","name":"button","_selectable":false},"skip_api":true,"component_class_id":"d89082a67aeba27fccce83ed03e8c257","key":"__7__"}],"css":"","connect_heartbeat":false,"js":"","head":"","title":"Gradio","space_id":null,"enable_queue":true,"show_error":true,"show_api":true,"is_colab":false,"max_file_size":null,"stylesheets":[],"theme":"soft","protocol":"sse_v3","body_css":{"body_background_fill":"#f9fafb","body_text_color":"#1f2937","body_background_fill_dark":"#0b0f19","body_text_color_dark":"#f3f4f6"},"fill_height":false,"fill_width":false,"theme_hash":"238e18a231a6585b5e95f910801d714079c075fbe0f283263a0d3e9884aa3896","layout":{"id":0,"children":[{"id":1},{"id":2},{"id":3},{"id":4,"children":[{"id":5},{"id":6}]},{"id":7}]},"dependencies":[{"id":0,"targets":[[6,"click"]],"inputs":[5],"outputs":[3,5],"backend_fn":true,"js":null,"queue":true,"api_name":"chat","scroll_to_output":false,"show_progress":"full","batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_mode":"once","show_api":true,"zerogpu":false,"rendered_in":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null},{"id":1,"targets":[[5,"submit"]],"inputs":[5],"outputs":[3,5],"backend_fn":true,"js":null,"queue":true,"api_name":"chat_1","scroll_to_output":false,"show_progress":"full","batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_mode":"once","show_api":true,"zerogpu":false,"rendered_in":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null},{"id":2,"targets":[[7,"click"]],"inputs":[],"outputs":[3,5],"backend_fn":true,"js":null,"queue":false,"api_name":"clear_conversation","scroll_to_output":false,"show_progress":"full","batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_mode":"once","show_api":true,"zerogpu":false,"rendered_in":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null}],"root":"http://127.0.0.1:7862","username":null};</script><script>window.gradio_api_info = {"named_endpoints":{"/chat":{"parameters":[{"label":"parameter_5","parameter_name":"user_input","parameter_has_default":false,"parameter_default":null,"type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox","example_input":"Hello!!"}],"returns":[{"label":"Tr√≤ Chuy·ªán V·ªõi Tr·ª£ L√Ω","type":{"$defs":{"ComponentMessage":{"properties":{"component":{"title":"Component","type":"string"},"value":{"title":"Value"},"constructor_args":{"title":"Constructor Args","type":"object"},"props":{"title":"Props","type":"object"}},"required":["component","value","constructor_args","props"],"title":"ComponentMessage","type":"object"},"FileData":{"description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed).","properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"default":{"_type":"gradio.FileData"},"title":"Meta","type":"object"}},"required":["path"],"title":"FileData","type":"object"},"FileMessage":{"properties":{"file":{"$ref":"#/$defs/FileData"},"alt_text":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Alt Text"}},"required":["file"],"title":"FileMessage","type":"object"},"Message":{"properties":{"role":{"title":"Role","type":"string"},"metadata":{"$ref":"#/$defs/Metadata"},"content":{"anyOf":[{"type":"string"},{"$ref":"#/$defs/FileMessage"},{"$ref":"#/$defs/ComponentMessage"}],"title":"Content"},"options":{"anyOf":[{"items":{"$ref":"#/$defs/Option"},"type":"array"},{"type":"null"}],"default":null,"title":"Options"}},"required":["role","content"],"title":"Message","type":"object"},"Metadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Title"}},"title":"Metadata","type":"object"},"Option":{"properties":{"label":{"title":"Label","type":"string"},"value":{"title":"Value","type":"string"}},"required":["value"],"title":"Option","type":"object"}},"items":{"$ref":"#/$defs/Message"},"title":"ChatbotDataMessages","type":"array","additional_description":null},"python_type":{"type":"List[Dict(role: str, metadata: Dict(title: str | None), content: str | Dict(file: filepath, alt_text: str | None) | Dict(component: str, value: Any, constructor_args: Dict(), props: Dict()), options: List[Dict(label: str, value: str)] | None)]","description":""},"component":"Chatbot"},{"label":"value_5","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox"}],"show_api":true},"/chat_1":{"parameters":[{"label":"parameter_5","parameter_name":"user_input","parameter_has_default":false,"parameter_default":null,"type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox","example_input":"Hello!!"}],"returns":[{"label":"Tr√≤ Chuy·ªán V·ªõi Tr·ª£ L√Ω","type":{"$defs":{"ComponentMessage":{"properties":{"component":{"title":"Component","type":"string"},"value":{"title":"Value"},"constructor_args":{"title":"Constructor Args","type":"object"},"props":{"title":"Props","type":"object"}},"required":["component","value","constructor_args","props"],"title":"ComponentMessage","type":"object"},"FileData":{"description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed).","properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"default":{"_type":"gradio.FileData"},"title":"Meta","type":"object"}},"required":["path"],"title":"FileData","type":"object"},"FileMessage":{"properties":{"file":{"$ref":"#/$defs/FileData"},"alt_text":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Alt Text"}},"required":["file"],"title":"FileMessage","type":"object"},"Message":{"properties":{"role":{"title":"Role","type":"string"},"metadata":{"$ref":"#/$defs/Metadata"},"content":{"anyOf":[{"type":"string"},{"$ref":"#/$defs/FileMessage"},{"$ref":"#/$defs/ComponentMessage"}],"title":"Content"},"options":{"anyOf":[{"items":{"$ref":"#/$defs/Option"},"type":"array"},{"type":"null"}],"default":null,"title":"Options"}},"required":["role","content"],"title":"Message","type":"object"},"Metadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Title"}},"title":"Metadata","type":"object"},"Option":{"properties":{"label":{"title":"Label","type":"string"},"value":{"title":"Value","type":"string"}},"required":["value"],"title":"Option","type":"object"}},"items":{"$ref":"#/$defs/Message"},"title":"ChatbotDataMessages","type":"array","additional_description":null},"python_type":{"type":"List[Dict(role: str, metadata: Dict(title: str | None), content: str | Dict(file: filepath, alt_text: str | None) | Dict(component: str, value: Any, constructor_args: Dict(), props: Dict()), options: List[Dict(label: str, value: str)] | None)]","description":""},"component":"Chatbot"},{"label":"value_5","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox"}],"show_api":true},"/clear_conversation":{"parameters":[],"returns":[{"label":"Tr√≤ Chuy·ªán V·ªõi Tr·ª£ L√Ω","type":{"$defs":{"ComponentMessage":{"properties":{"component":{"title":"Component","type":"string"},"value":{"title":"Value"},"constructor_args":{"title":"Constructor Args","type":"object"},"props":{"title":"Props","type":"object"}},"required":["component","value","constructor_args","props"],"title":"ComponentMessage","type":"object"},"FileData":{"description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed).","properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"default":{"_type":"gradio.FileData"},"title":"Meta","type":"object"}},"required":["path"],"title":"FileData","type":"object"},"FileMessage":{"properties":{"file":{"$ref":"#/$defs/FileData"},"alt_text":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Alt Text"}},"required":["file"],"title":"FileMessage","type":"object"},"Message":{"properties":{"role":{"title":"Role","type":"string"},"metadata":{"$ref":"#/$defs/Metadata"},"content":{"anyOf":[{"type":"string"},{"$ref":"#/$defs/FileMessage"},{"$ref":"#/$defs/ComponentMessage"}],"title":"Content"},"options":{"anyOf":[{"items":{"$ref":"#/$defs/Option"},"type":"array"},{"type":"null"}],"default":null,"title":"Options"}},"required":["role","content"],"title":"Message","type":"object"},"Metadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Title"}},"title":"Metadata","type":"object"},"Option":{"properties":{"label":{"title":"Label","type":"string"},"value":{"title":"Value","type":"string"}},"required":["value"],"title":"Option","type":"object"}},"items":{"$ref":"#/$defs/Message"},"title":"ChatbotDataMessages","type":"array","additional_description":null},"python_type":{"type":"List[Dict(role: str, metadata: Dict(title: str | None), content: str | Dict(file: filepath, alt_text: str | None) | Dict(component: str, value: Any, constructor_args: Dict(), props: Dict()), options: List[Dict(label: str, value: str)] | None)]","description":""},"component":"Chatbot"},{"label":"value_5","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox"}],"show_api":true}},"unnamed_endpoints":{}};</script>

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link
			rel="preconnect"
			href="https://fonts.gstatic.com"
			crossorigin="anonymous"
		/>
		<script
			src="https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/4.3.1/iframeResizer.contentWindow.min.js"
			async
		></script>
		<script type="module" crossorigin src="./assets/index-9GPo9fAK.js"></script>
		<link rel="stylesheet" crossorigin href="./assets/index-Ds2W70uG.css">
	</head>

	<body
		style="
			width: 100%;
			margin: 0;
			padding: 0;
			display: flex;
			flex-direction: column;
			flex-grow: 1;
		"
	>
		<gradio-app
			control_page_title="true"
			embed="false"
			eager="true"
			style="display: flex; flex-direction: column; flex-grow: 1"
		>
		</gradio-app>
		<script>
			const ce = document.getElementsByTagName("gradio-app");

			if (ce[0]) {
				ce[0].addEventListener("domchange", () => {
					document.body.style.padding = "0";
				});
				document.body.style.padding = "0";
			}
		</script>
	</body>
</html>